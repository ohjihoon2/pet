package com.pettoday.dao;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.mybatis.spring.SqlSessionTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.pettoday.vo.ItemVO;

@Repository
public class ItemDAO {

	@Autowired
	private SqlSessionTemplate sqlSession;
	
	private String namespace="mapper.item";
	
	/** 카테고리 리스트 - row count행 출력 **/
	public int execTotalCount2(String check_text) {
		return sqlSession.selectOne(namespace + ".icount_item_detail",check_text);
	}
	
	/** 카테고리 리스트 - row count행 출력 **/
	public int execTotalCount(String item_cate) {
		return sqlSession.selectOne(namespace + ".icount_item_category",item_cate);
	}
	
	/** 전체 리스트 - row count행 출력 **/
	public int execTotalCount() {
		return sqlSession.selectOne(namespace + ".icount");
	}
	
	/** 카테고리별 전체 리스트 **/
	public ArrayList<ItemVO> getCateDetailResultList(int start, int end,String check_text){
		List<ItemVO> list = null;
		
		Map<String, String> param = new HashMap<String, String>();
		param.put("start", String.valueOf(start));
		param.put("end", String.valueOf(end));
		param.put("check_text", check_text);
		
		list = sqlSession.selectList(namespace + ".cate_detail_list", param);
		
		return (ArrayList<ItemVO>)list;
	}
		
	
	/** 카테고리별 전체 리스트 **/
	public ArrayList<ItemVO> getCateResultList(int start, int end,String item_cate){
		List<ItemVO> list = null;
		
		Map<String, String> param = new HashMap<String, String>();
		param.put("start", String.valueOf(start));
		param.put("end", String.valueOf(end));
		param.put("item_cate", item_cate);
		
		list = sqlSession.selectList(namespace + ".cate_list", param);
		
		return (ArrayList<ItemVO>)list;
		
	}
	
	
	/** 전체 리스트 **/
	public ArrayList<ItemVO> getResultList(int start, int end){
		List<ItemVO> list = null;
		
		Map<String, String> param = new HashMap<String, String>();
		param.put("start", String.valueOf(start));
		param.put("end", String.valueOf(end));
		
		list = sqlSession.selectList(namespace + ".list", param);
		
		return (ArrayList<ItemVO>)list;
		
	}
	
	/** 추천상품 리스트 **/
	public ArrayList<ItemVO> getGoodList(){
		List<ItemVO> list = null;
		list = sqlSession.selectList(namespace + ".goodlist");
		
		return (ArrayList<ItemVO>)list;
		
	}
	/** 강아지추천상품 리스트 **/
	public ArrayList<ItemVO> getDogGoodList(){
		List<ItemVO> list = null;
		list = sqlSession.selectList(namespace + ".doggoodlist");
		
		return (ArrayList<ItemVO>)list;
		
	}
	/** 고양이추천상품 리스트 **/
	public ArrayList<ItemVO> getCatGoodList(){
		List<ItemVO> list = null;
		list = sqlSession.selectList(namespace + ".catgoodlist");
		
		return (ArrayList<ItemVO>)list;
		
	}
	/** 최근 본 상품 리스트 **/
	public ArrayList<ItemVO> getNearList(){
		List<ItemVO> list = null;
		list = sqlSession.selectList(namespace + ".neargoodlist");
		
		return (ArrayList<ItemVO>)list;
		
	}
	/** 최근 본 아이템 **/
	public void getReadItem(String item_no) {
		sqlSession.insert(namespace+".nearinsert",item_no);
	}
	
	
	
	/** 아이템 상세리스트 **/
	public ItemVO getResultItemDetail(String iid) {
		return sqlSession.selectOne(namespace+".detailList",iid);
	}
	
}
